<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[vjhawar's wall]]></title>
  <link href="http://vjhawar.github.io/atom.xml" rel="self"/>
  <link href="http://vjhawar.github.io/"/>
  <updated>2014-07-28T00:51:36+05:30</updated>
  <id>http://vjhawar.github.io/</id>
  <author>
    <name><![CDATA[vipul jhawar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scalability Simplified With Aerospike]]></title>
    <link href="http://vjhawar.github.io/blog/2014/05/24/scalability-simplified-with-aerospike/"/>
    <updated>2014-05-24T00:27:24+05:30</updated>
    <id>http://vjhawar.github.io/blog/2014/05/24/scalability-simplified-with-aerospike</id>
    <content type="html"><![CDATA[<p>Ad tech is one of those categories where dealing with scale at low latency is key to running your business. It&rsquo;s simply impossible to grow without building each and every component for scale because in the end if you cannot complete your transaction in a few milliseconds, you will be trumped no matter how great you are at other things.
The other fact which distinguishes ad tech from many other large scale application is that ad tech is also a write/update intensive system. With video advertising the number of events triggred per impression have increased manifold compared to a classic display ad. The high amount of read and writes makes the process of narrowing down components for your subsystem more important and critical for long term because a lot of software written today has low shelf life which is not a great. If you compare ad tech to a typical social or ecommerce platform, I am sure the number of primary reads v/s the writes would be much higher for the minimal business transaction.</p>

<!-- more -->


<p>As the requirement of a large, distributed key-value hash is now common across all internet scale deployments nowadays, Ad tech since a long time back had the need and was dealing with large number of user profiles, url&rsquo;s, user-agent strings, domain&rsquo;s, IP&rsquo;s, partner data etc and some of these were directly looked up and the decision after the whole lookup needed to complete in milliseconds because you cannot have the ad served too long after the user has been on the page and RTB made it more stringent than just ad serving.</p>

<br/>


<p>Aerospike provided both performance and consistency along with breakneck performance on SSD&rsquo;s which is the first criteria for ad tech. The other important point is that aerospike&rsquo;s performance is not just great for a read heavy scenario but also for write&rsquo;s. While different applications may choose speed over consistency but having to deal with inconsistency, the discrepancies that may result as an after effect and check pointing from when things became fine again is a tedious task and is preferably avoided.</p>

<p>One of the use cases to deploy aerospike was to scale out a large scale url cache which was fed from both the ad serving and the contextulaization engine and typically needs to be used for making every decision when you are serving an ad on the page. Deploying the cache on aerospike solved many of our problems including time outs, warming up on restarts, keep scaling out to reads and writes, ability to have secondary indexes if needed, consistency without compromising for speed, load balanced cluster, distributed processing at node level and be able to maintain uptime in case of a node failure etc.</p>

<br/>


<p>Some of the points where aerospike helped.</p>

<h1>Lesser number of server&rsquo;s needed to be deployed and maintained as each one is a master in itself, rather than having write and read master. No matter how easy or configurable the sharding is, there is value in keeping your setup, deployment simple and your developers need not worry about underlying storage criteria.</h1>

<h1>An almost load balanced cluster. Aerospike&rsquo;s almost consistent hashing across the nodes ensured that you end up with an almost laod balanced cluster and this usually helps getting consistent performance for your reads/writes as you dont end up with localization. It also ensures that most likely your hot data is also spread across the cluster and you are not likely to see a sudden degrade in performance because of localized hot data. This also pushes for similar config on your hardware and it always helps when you have setup hardware which is consistent across all nodes, so a well spread out data across equally capable nodes leads to a much more predictable performance than trying to run nodes with hetrogeneous configs.</h1>

<h1>Setting up for eventual consistency than immediate consistency is not an easy decision to make for newer components, sometimes you make a quick choice within current constraints to live with eventual consistency but it just make things simpler if you can get the required throughput with immediate consistency and not have to worry modelling your cases around eventual consistency.</h1>

<h1>Built in rebalancing in case of node failure which is critical for uptime.</h1>

<h1>Low latency even on high write or balanced read/write use case.</h1>

<h1>As SSD storage is becoming a standard and the pricing keeps coming down, getting reliable performance from a storage is always preferable over RAM. You could typically have your data replicated over large in memory clusters and claim that all will not fail at the same time but then the cost is a hindrance.</h1>

<h1>Aerospike scales pretty well with SSD as they have it optimized for SSD storage. This is not the case with many other key-value stores as some are heavily dependent on RAM or async flush to get high throughput. Comparing SSD density v/s RAM for storage and the storage cost per GB is lesser in SSD against RAM, so any database which could exploit performance on SSD&rsquo;s was helpful and Aerospike does the same.</h1>

<h1>Dealing with bursts &ndash; It could happen that you suddenly have to deal with bursts and you are not provisioned for it. It needs to be seen how well a RAM only store compares to SSD in case of bursts as this would involve churning out older data to make place for the new one and if your RAM based store is built on JVM then GC overheads do kick in. Aerospike claims to have decent throughput even in case of bursts.</h1>

<br/>


<p>Some points which need attention</p>

<h1>Need Lua for scripting. Lua is great, but someone needs to do it and developer interest is limited if it&rsquo;s only for one use case unless it&rsquo;s used for more use cases in your setup.</h1>

<h1>While we have the aerospike monitoring console, it seems to use browser as a cache for the throuhput histogram data and you cant see last 30 minutes data if your browser window was not open during last 30 mins. You typically need to see monitoring data from when you want, so having this support inbuilt in the AMC would be more helpful.</h1>

<h1>You ideally need inbuilt support for notification/alert integration for tools such as nagios. Currently they display notifications on the AMC, but that&rsquo;s not enough and we faced some challenges integrating with the nagios plugin.</h1>

<h1>Having an ability of a separate sandbox which could be deployed on a separate node to run AQL and read only AS Monitor commands is much preferred. I have not spent enough time to see if it&rsquo;s possible but you typically want developers to be restricted away from logging onto the main box for security reasons.</h1>

<p>A lot of companies have deployed other key value stores and tuned them to their requirements but our experience with aerospike clearly demonstrated that it is built to solve problems of scale without requiring too much out of the box tuning at start and had all the basic elements to get you going on production pretty quickly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Career Progression - How to Contribute More ?]]></title>
    <link href="http://vjhawar.github.io/blog/2014/05/01/career-progression-how-to-contribute-more/"/>
    <updated>2014-05-01T13:28:59+05:30</updated>
    <id>http://vjhawar.github.io/blog/2014/05/01/career-progression-how-to-contribute-more</id>
    <content type="html"><![CDATA[<p>Team members who are high on delivery and motivation are usually very serious about career progression and are always looking at opportunities to contribute more to the company and have a greater impact on the products. However, it&rsquo;s never easy for an individual to figure out once he joins a team or a company as to how he will grow and how does his job become complex. It&rsquo;s also important that a company promotes a culture where expectation setting and career progression are not just at the will of manager&rsquo;s but there is a clear articulation of what the company values and it promotes a culture which thrives on those values. If the goal is to define career progression for a function in a lean way, so that a single sheet could give a bird&rsquo;s eye view of what are some of the key tactical, strategic and behavioral expectations, you could follow a similar process to come up with a version which aligns to your companies requirements.</p>

<!--more-->


<p>While career progression sometimes may end up being a conversation around working on broader technologies or an opportunity to work on a new project but in the long term it&rsquo;s not a fundamental progression. As you gain skills and maturity, its important that the team members reflect the same through their roles, responsibilities and behaviors consistently so that the company as a whole benefits in achieving it&rsquo;s goals. Below is a sample template for a developer track which could be used to define career progression at any organization, with what you value at which level in your organization.</p>

<p><img class="center" src="http://vjhawar.github.io/images/banding_template.png" title="[600] [400] [[A template for developer career progression]]" ></p>

<h2>Some of the key highlights</h2>

<blockquote><ul>
<li>Contribute &ndash; If you noticed, the document is heavily loaded with &ldquo;Contribute&rdquo; because we feel no matter what you are and what you do, you are always contributing and producing work on your own. If you are a company with a lot of people whose job is to generate and assign work to people, you probably have a very undesirable DNA.</li>
<li>As you move from left to right, you gain and demonstrate the evolution of different competencies consistently.</li>
<li>Irrespective of which level or job you belong to, you do not want to restrict disruption. Disruption is not limited to rolling at a new feature, there are many ways and means of disrupting the status quo and you should always be emphasizing to your teams to be disruptive to change the status quo.</li>
<li>Innovation should not be one man/function/team job. Everybody should be empowered to innovate. Some companies have separate teams whom they call innovation teams, which itself conveys a message to other&rsquo;s &ndash; &ldquo;It&rsquo;s fine if you are not innovating.&rdquo;. Do you really want to do that ?</li>
<li>There is a clear stress on courage, as you don&rsquo;t want to have people in your team who only do what is told to them but never challenge or bring up issues.</li>
<li>As you move from left to right on your career axes you are becoming strategic and also handling much more complexity to come up with solutions. A healthy mix of levels in a company will automatically help achieve it&rsquo;s goals in a more cohesive way.</li>
<li>There is no stress on process or adherence to a process, because process is suppose to empower you to do what is desired.</li>
<li>You want to make sure that people just don&rsquo;t move up the ladder because they have been in the company for a couple of years. For instance if they are not demonstrating the desired principal contributor competencies, then it&rsquo;s pretty public to everyone and you would not need to deal with the politics.</li>
<li>Fast movers would love such a setup as irrespective of their experience or when they joined the company, they clearly know as to what the company values and this is not a conversation that he/she needs to have with his/her manager every now and then.</li>
<li>It doesn&rsquo;t matter what is your current experience, or how long you have been in a level, if you are consistently demonstrating the next level, you make progress and it doesn&rsquo;t put off anyone because it&rsquo;s all public.</li>
</ul>
</blockquote>

<p>However, before you get to define such a framework it&rsquo;s important to step back and answer a few key questions.</p>

<h4>* Do you promote a culture which helps people make progress in their career and be more accountable without any politics or is your company run at whims of manager&rsquo;s/lead&rsquo;s who decide what they value and who demonstrates it ? If you are not open to supporting it from the top, the above experiment will be detrimental.</h4>

<h4>* What are some of the key competencies that you value, and how do they evolve over time ? Ideally you may not want to pick more than 5 key competencies. If you are not clear about this, you will never be able to retain your ninja&rsquo;s for a long time.</h4>

<h4>* Do you have a clear convergence across roles, so that company is able to meet it&rsquo;s goals with combined efforts from employees.</h4>

<h4>* You may have to break the standard practices of importance of industry experience and hierarchy as it may only be indicative but in no way require you to mandate someone to be X years of experience before he can be a Principal Contributor. If someone can be a principal contributor in half the time as other&rsquo;s you are actually in good company.</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Let's Build a City]]></title>
    <link href="http://vjhawar.github.io/blog/2014/03/16/lets-build-a-city/"/>
    <updated>2014-03-16T01:22:45+05:30</updated>
    <id>http://vjhawar.github.io/blog/2014/03/16/lets-build-a-city</id>
    <content type="html"><![CDATA[<p>A lot of times some people on your team may not be able to visualize the scale of the opportunity they have on their hands.
How do you help them visualize the scale ?</p>

<!--more-->


<p>I presented an analogy on how building an internet scale project is similar to building a city.
It&rsquo;s much easier to visualize building a city compared to a internet scale complex software with just architecture diagrams.</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/32370046" width="427" 
height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" 
style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> 
</iframe>


<p></p>

<div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/VipulJhawar/lets-build-a-city-32370046" title="Let&#x27;s build a city" target="_blank">Let&#x27;s build a city</a> </strong> from <strong><a href="http://www.slideshare.net/VipulJhawar" target="_blank">Vipul Jhawar</a></strong> </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Productivity Tip - Quickly Setup a Simple Hiring Workflow]]></title>
    <link href="http://vjhawar.github.io/blog/2014/03/08/quickly-setup-a-hiring-workflow/"/>
    <updated>2014-03-08T10:30:21+05:30</updated>
    <id>http://vjhawar.github.io/blog/2014/03/08/quickly-setup-a-hiring-workflow</id>
    <content type="html"><![CDATA[<p>Hiring the right talent, at the right time with the right resources is key to any companies success. If you are not able to get your hiring plans on track and ensure that you are always hiring great people, it&rsquo;s going to get very challenging for you both internally and externally. I still feel hiring is still a lot of art than science and it needs a lot of focus and priority to get it right. While each company has it&rsquo;s own hiring strategy on the kind of talent it wants to pursue, it always helps to follow a lean hiring process which can move fast and be responsive to a candidate. If you really like someone, you should be able to seal the deal pretty quickly, rather than linger on due to process and productivity issues in your hiring team.</p>

<!--more-->


<p>One way to keep focus and priority on hiring is to make it transparent to all the stakeholders and participants. Most interviewers hate it when all they are told to just conduct an interview when a candidate arrives as if their job is just to do a round of intreview and then spit out the feedback. If you end up creating silos among your interviewers and decision makers, you will hardly make any good progress in hiring because each interviewer feels his job was just to do the interview and provide feedback. An interview should not just be an evaluation for a candidate, it should be an experience and if the interviewer treats it as a monotonous task, the candidate is not going to be excited about it. The best way is to open up the hiring details and progress to everyone and ensure that everyone who is part of hiring team is involved in the complete process and gets a complete update on where things stand. If we are not making progress on a key hire for a team A, and it&rsquo;s imperative we add capacity to Team A this quarter as we have over arching goals to achieve in this year, you need more partners to help you reach the goal then just executors who will do a task assigned to them. Hiring fails badly when it gets task oriented, so it&rsquo;s best to align each interviewer as a partner in your hiring process.</p>

<p>A quick way to setup a simple workflow for hiring would be to use JIRA, if you are already using it in your company for an engineering project. JIRA is very powerful and you can quickly setup any custom workflow with required permissions in minutes and boom you are ready to go without buying any new fancy software. Setting up a kanban board in JIRA is a quick hack to get your hiring process transparent and ensure real time tracking of progress made on any position.</p>

<p><img class="left" src="http://vjhawar.github.io/images/hiring_flow.png" title="[728] [90] Hiring on kanban" ></p>

<h4>What do you do</h4>

<ul>
<li>Setup a Kanban board for recruiting. A sample reference screenshot is shown above.</li>
<li>Create columns as per your companies hiring process, each stage in the interview process would typically be a column on the board and you could have some additional columns to see specific status such as &ldquo;Resumes Rejected&rdquo;, &ldquo;Offer Dropouts&rdquo; as this are some areas you want to focus on if they have big count. If so, it requires a strategic intervention to get things right.</li>
<li>You could create swimlanes for each position or a group of positions. This will help you see progress by each position or group. For e.g. in the screenshot above, we are tracking two separate positions.</li>
<li>Define filters on top as per your requirements. These could be By location, By date, By state, By date range etc.</li>
<li>Setup an email such that any resume that comes in the company is sent to a JIRA project and depending on how you have structured your swimlanes it will autmatically land in the INBOX column for that psition.</li>
<li>Have a meeting among the hiring team members, and set the rules of the game. Every body checks and assigns the tasks as per workflow, and updates the feedback on the JIRA task assigned to them.</li>
</ul>


<h4>How does it help</h4>

<ul>
<li>If any particular particiapting function or person is bottleneck in the current pipeline, it would instantly show up on the board.</li>
<li>If you are seeing too many offer dropouts, you know something is wrong.</li>
<li>If you are seeing too many resumes getting rejected, it means your sourcing is not right and your team is spending valuable time on rejecting resumes.</li>
<li>If your scheduling or initial screening is blocking the progress, you can now ask difficult questions to your talent partners.</li>
<li>Having the whole activity being updated in real time helps everyone in the team and you don&rsquo;t end up doing useless meetings on tracking status. Also, each task has an assignee at any moment of time and people know what is coming along their way next.</li>
<li>With everybody&rsquo;s comments on the task, its easy to reach a decision.</li>
<li>People come up with ideas in order to solve bottlenecks in the pipeline because now they may feel part of the process rather than being a hop in the process as was happening previously.</li>
</ul>


<p>If you are not using JIRA, you could also use Asana to setup a quick hiring workflow for your team as per &ndash; [Recruiting and applicant tracking] (<a href="https://asana.com/guide/explore/workflow/customize">https://asana.com/guide/explore/workflow/customize</a>)</p>

<p><img class="left" src="http://vjhawar.github.io/images/hiring_flow_asana.png" title="Hiring on Asana" ></p>

<p>Ensuring a lean and transparent process using some productive tools can go a long way in helping you hire the right talent. If you are not being productive in hiring, you will end up wasting more time of your key engineers on interviewing more people than deliver products because there is a high chance that the candidate you liked has been shortlisted by some more companies and if you are not tracking and moving fast, you will lose a great potential hire whom your team really wanted on board.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Live and Not Just Make a Living]]></title>
    <link href="http://vjhawar.github.io/blog/2014/01/06/how-to-live-and-not-just-make-a-living/"/>
    <updated>2014-01-06T01:18:56+05:30</updated>
    <id>http://vjhawar.github.io/blog/2014/01/06/how-to-live-and-not-just-make-a-living</id>
    <content type="html"><![CDATA[<p>In India people hardly share their experiences as they are either too shy about it or too ignorant about it. As we graduate from college to begin the real life, no one has ever told you what it could be like out there and what could matter. Our college teaches us how to make a living but not how to live, they actually just taught the easier part and forgot to share anything else.
Below are excerpt&rsquo;s from an open letter to a dear one when he moved out of college.</p>

<!--more-->


<hr />

<p>As you move to a new phase in your career and life, I want to wish you luck and joy. I hope you will be able to ride on the positive energy within you and conquer the numerous possibilities of this world.</p>

<br/>


<h3>This is your life, you decide and live it</h3>

<p>As you grow older, you have to find a meaning of life for yourself and what you want from it, and there is no one who can solve it for you. Parents, relatives and friends are all actors with a varying degree of emotional attachment and they should matter a lot, but they should not be the ones who decide your life. In the end you are responsible for it, so always be open for guidance, coaching, help and opinions but in the end whenever you do something, make sure you are convinced about it. Whether you succeed or fail, it&rsquo;s all yours. You can always share it, but make sure you have done work enough to be reason for the task and outcome, as the result always comes later. Sooner or later you will have to take decisions, so why not start now and live for them.</p>

<br/>


<br/>


<h3>Always aim to be among the top N</h3>

<p>This may sound too cruel or too competitive to you, but having a benchmark goal goes a long way in life. While being above the rest is not the sole aim of life, but a relative target in life always helps. Whether you like it or not as living species we have to face some basic competition. Not all people on earth make it a better place, they live their lives because they have to and they try to find reasons for it. They always have reasons for doing things for the sake of it or for others because they have parents, a loving wife, kids or friends and they are overwhelmed by what it requires to go beyond a normal effort. It is usually the top N % people in this world who make this world a better place, who innovate, who lead, who guide and who help solve problems. It may take many many years, many failures but you can get there and be among the leaders and not the sheeps. Being a sheep you can give company to all the sheeps around you but you will not be able to help them solve problems. The purpose is not to defeat others, the purpose is to be among the top no matter what you do. The top N % do not always consist of monetary parameters, you should decide what you do and what are your criteria&rsquo;s for the top N % but it would justify only if you made a big impact.</p>

<br/>


<br/>


<h3>Don&rsquo;t be a Complete Man, be a Better Man</h3>

<p>There is no such thing as perfect in this world. Everything in this world is relative and keeps evolving and will continue to do so. Be ready for change, keep evolving and adapting everyday and never assume that you are done. This is one of the hardest things in life, but it&rsquo;s unavoidable. The real clock of the world is always ticking, even if you shutdown your watch. Change is constant and you can&rsquo;t avoid it. There is no such thing as a Complete Man, you just have to be a better man tomorrow than what you are today, and the world will often treat you as a complete man because you are always changing and adapting to be better.</p>

<br/>


<br/>


<h3>Be passionate and challenge yourself</h3>

<p>Life is too short to be lying around on the couch and spending all your time on stupid things. Keep challenging yourself against the things you have not done before. Life will keep throwing challenges at you, you either win them over or lose them or worse ignore them to try your luck but ignorance is death and only losers ignore. If you are not challenging yourself, you are being unfair to yourself and no one else.</p>

<br/>


<br/>


<h3>Share love and wealth</h3>

<p>Share and spread as much love and wealth as possible. This is very hard, but a smile on other&rsquo;s face will make you a very happy man. People don&rsquo;t remember you for the car&rsquo;s or houses you own, they remember you for your company, your actions, your camraderie, the time you spent with them. Never be arrogant about what you achieve, trust me it&rsquo;s very difficult to be a simple man once you have been successful but you should always try to be a simple man.</p>

<br/>


<br/>


<h3>It&rsquo;s not impossible</h3>

<p>Trust me it never takes too long for things to change or be successful. Germany lost the world wars and was ruined, but it&rsquo;s still one of the most prosperous countries of the world. People become millionaires/billionaires by the time they are 25, not because they are blessed by god but they did something for it. People with disabilities conquer the most physically enduring challenges on earth. There are umpteen examples of how a normal man did what always seemed impossible. While this may sound theoretical and rhyming to you, let me tell you that there is no such thing as an average kid, we are all special kids but not all are able to explore and exploit their speciality.</p>

<br/>


<br/>


<h3>Set goals, they are helpful</h3>

<p>Always try to set goals in your life and try to track them against time. It will provide you opportunities to retrospect and course correct. If you are not failing in achieving your goals, it means you are not setting tough goals for yourself.</p>

<br/>


<br/>


<h3>Take risks</h3>

<p>Always be willing to take risks in life. There is nothing like a real life experience, if you have not had it you will never know it. Consider yourself lucky, if you manage to limit your loss but don&rsquo;t be afraid to take risk for the fear of losing. The upside is always limited if you are not taking risks. You should be limiting your downside not your upside.</p>

<br/>


<br/>


<h3>Do something for the environment</h3>

<p>In your own capacity, make sure you explore this world and do something for the environment. It needs to be preserved.</p>

<br/>


<br/>


<p>I wish you luck, love and success for your future.</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Scheduler Using Quartz]]></title>
    <link href="http://vjhawar.github.io/blog/2008/10/10/simple-scheduler-using-quartz/"/>
    <updated>2008-10-10T05:21:42+05:30</updated>
    <id>http://vjhawar.github.io/blog/2008/10/10/simple-scheduler-using-quartz</id>
    <content type="html"><![CDATA[<p>There are a lot of use cases which require running jobs aka units of repeatable tasks. The job may be required to run at runtime or at fixed regular intervals. Building a standard Java Scheduler server on top of Quartz is  pretty simple or you could use it as an embedded service in any of your current nodes, but the best use case is to have a separate Scheduler or Job Server as some people may call it, whose primary use is to exeute jobs. As jobs can involve long running transactions , be resource intensive or may span for long times it ensures that there is a clear functional sepration and are of responsibility of such a server. Having a dedicated Scheduler / Job server ensures that you are dealing with the cron hell and beyong point it becomes so difficult to keep track and audit of what is running where.</p>

<!--more-->


<p>Quartz is pretty stable and provides a neat api, and you could extend it a bit as well for some more custom stats and details. It provides options of a RAM Store or a DB Store. if you not worried about reliability and not worried about your jobs being lost or not being replayed on restart, then RAMStore based server may work fine for you.
All you need to do is define your job mappings and trigger details in a config file and you are good to go.</p>

<p>Make sure you implement a joblistener, this is done by extending the JobListenerSupport class and then initializing your scheduler with the joblistener support. The advantage with joblistener is that it provides you callback like api&rsquo;s for events such as jobToBeExecuted, jobExecutionVetoed and jobWasExecuted. You could use these callbacks to update your own status tables or do some auditing.</p>

<p>The main core of the Quartz is the Scheduler interface which provides implementation for StandardScheduler. It has rich api&rsquo;s for adding, pausing, resuming jobs. Api&rsquo;s to manage the triggers and listeners as well and you could use these api&rsquo;s to to build a nifty web interface which could help you pause, resume some/all jobs as and when needed.</p>

<p>You could expose your scheduler server over an RMI and automatically trigger jobs from other java servers by programtically managing the jobs. You could expose the server over http by embedding the service in a Resin or Tomcat and then managing the Job Server from a UI. We exposed the Scheduler server over RMI which allowed us to schedule jobs as part of some business updates, and then this made the job trigger and scheduling programmatic instead of manual interventions for some cases. We also exposed the available jobs and possible parameters from a UI, so that you could trigger a job on demand.</p>

<p>Writing job in quartz is pretty simple as all you need to do is write an implementation for the Job interface and implement the execute() which provides you JobExecutionContext which contains all the Job data. However, it&rsquo;s always helpful for provide abstract implementations of some typical job types so that the developers just write the core logic.</p>

<p>You could have an abstract class BaseJob as</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>abstract class BaseJob implements Job {
</span><span class='line'>    
</span><span class='line'>    execute(JobExecutionContext context) {
</span><span class='line'>            
</span><span class='line'>        try {
</span><span class='line'>                init();
</span><span class='line'>                doJob(context);
</span><span class='line'>            } catch (Exception e)
</span><span class='line'>            {
</span><span class='line'>                //do something if required, then wrap and throw JobExceutionException.
</span><span class='line'>            } finally {
</span><span class='line'>                onComplete();
</span><span class='line'>            }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    init()
</span><span class='line'>    {
</span><span class='line'>        //you may do some initialization, some standard logging, or maintain your own status.
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    abstract doJob(JobExecutionContext context)
</span><span class='line'>    {
</span><span class='line'>        //this is what developers will implement when they need to write jobs.
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    onComplete()
</span><span class='line'>    {
</span><span class='line'>        //if you always want to do something on job completion
</span><span class='line'>    }
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Other options could be to use abstract implementations of BaseJob which could be a DatabaseJob, which ensures the database transaction is opened and closed within the job lifecycle and you are not leaving it to the user to avoid leaks. It&rsquo;s very easy to throw exceptions and screw up other jobs or have leaking jobs and you will figure this out over time because your jobs will be running over intervals.</p>
]]></content>
  </entry>
  
</feed>
